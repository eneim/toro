import java.util.function.Predicate

/*
 * Copyright (c) 2017 Nam Nguyen, nam@ene.im
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
  repositories {
    maven { url 'https://maven.fabric.io/public' }
  }

  dependencies {
    classpath 'io.fabric.tools:gradle:1.+'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
  maven { url 'https://maven.fabric.io/public' }
}

// apply plugin: 'kotlin-android'
apply plugin: 'com.getkeepsafe.dexcount'

android {
  signingConfigs {
    release {
      keyAlias "debug"
      keyPassword "android"
      storeFile file("debug.jks")
      storePassword "android"
    }

    debug {
      keyAlias "debug"
      keyPassword "android"
      storeFile file("debug.jks")
      storePassword "android"
    }
  }

  compileSdkVersion rootProject.ext.androidVersion
  buildToolsVersion rootProject.ext.buildToolVersion

  defaultConfig {
    applicationId "im.ene.toro.youtube"
    minSdkVersion rootProject.ext.minSupportSDKVersion
    targetSdkVersion rootProject.ext.androidVersion
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    vectorDrawables.useSupportLibrary = true
    buildConfigField("String", "API_KEY", "\"${youtube_apikey}\"")
    // multiDexEnabled true
    manifestPlaceholders = [fabric_api_key: "${fabric_api_key}"]
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    debug {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  lintOptions {
    disable 'InvalidPackage'
    abortOnError false
  }

  splits {
    abi {
      enable gradle.startParameter.taskNames.stream().filter(new Predicate<String>() {
        @Override
        boolean test(String s) {
          return s.toLowerCase().contains("assemble")
        }
      }).findFirst().present
      reset()
      include 'x86', 'x86_64', 'arm64-v8a', 'armeabi', 'armeabi-v7a', 'mips', 'mips64'
      universalApk false
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation project(':toro-core')

  implementation "com.android.support:design:${rootProject.ext.supportLibraryVersion}"
  implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibraryVersion}"
  implementation "com.android.support:cardview-v7:${rootProject.ext.supportLibraryVersion}"

  implementation 'com.google.apis:google-api-services-youtube:v3-rev187-1.23.0'
  implementation 'com.google.http-client:google-http-client-android:1.20.0'
  implementation 'com.google.api-client:google-api-client-android:1.20.0'
  implementation 'com.google.api-client:google-api-client-gson:1.20.0'

  implementation "android.arch.lifecycle:extensions:1.1.0"

  implementation 'com.github.bumptech.glide:glide:4.4.0'
  annotationProcessor 'com.github.bumptech.glide:compiler:4.4.0'

  // rxJava 2
  implementation("io.reactivex.rxjava2:rxandroid:2.0.1", {
    exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
  })

  implementation 'io.reactivex.rxjava2:rxjava:2.1.7'

  // implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

  testImplementation 'junit:junit:4.12'
  // androidTestImplementation 'com.android.support.test:runner:1.0.1'
  // androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

  implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
    transitive = true
  }

  implementation('com.crashlytics.sdk.android:crashlytics-ndk:1.1.6@aar') {
    transitive = true
  }
}

crashlytics {
  enableNdk true
  androidNdkOut 'src/main/obj'
  androidNdkLibsOut 'src/main/libs'
}
